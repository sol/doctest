name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    name: ${{ matrix.os }} / GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-22.04
        ghc:
          - 8.0.2
          - 8.2.2
          - 8.4.1
          - 8.4.2
          - 8.4.3
          - 8.4.4
          - 8.6.1
          - 8.6.2
          - 8.6.3
          - 8.6.4
          - 8.6.5
          - 8.8.1
          - 8.8.2
          - 8.8.3
          - 8.8.4
          - 8.10.1
          - 8.10.2
          - 8.10.3
          - 8.10.4
          - 8.10.5
          - 8.10.6
          - 8.10.7
          # - 9.0.1
          # - 9.0.2
          # - 9.2.1
          - 9.2.2
          - 9.2.3
          - 9.2.4
          - 9.2.5
          - 9.2.6
          - 9.2.7
          - 9.2.8
          - 9.4.1
          - 9.4.2
          - 9.4.3
          - 9.4.4
          - 9.4.5
          # - 9.6.1
          - 9.6.2
          - 9.8.1
          - 9.10.1
        include:
          - os: macos-12
            ghc: system
          - os: windows-latest
            # ghc: system
            ghc: 9.6.2
    steps:
      - uses: actions/checkout@v3
      - uses: hspec/setup-haskell@v1
        with:
          ghc-version: ${{ matrix.ghc }}

      - run: ghcup install cabal 3.10.1.0 --set
        if: matrix.os == 'macos-12'

      - run: cabal update
      - run: cabal configure --enable-tests --enable-benchmarks
      - run: cabal build all
      - run: cabal exec -- cabal test all --test-show-details=direct
        env:
          HSPEC_OPTIONS: --color
      - run: cabal install
      - run: cabal repl --with-ghc=doctest

  success:
    needs: build
    runs-on: ubuntu-latest
    if: always() # this is required as GitHub considers "skipped" jobs as "passed" when checking branch protection rules

    steps:
      - run: false
        if: needs.build.result != 'success'
